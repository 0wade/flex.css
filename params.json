{
  "name": "Flex.css",
  "tagline": "移动端flex布局神器，兼容微信，UC，webview等移动端主流浏览器",
  "body": " \r\n [![npm](https://img.shields.io/npm/v/flex.css.svg?style=flat-square)](https://www.npmjs.com/package/flex.css) [![npm](https://img.shields.io/npm/dt/flex.css.svg?style=flat-square)](https://www.npmjs.com/package/flex.css) [![npm](https://img.shields.io/npm/l/flex.css.svg?style=flat-square)](https://www.npmjs.com/package/flex.css)\r\n\r\n### 安装\r\n```\r\nnpm install flex.css --save\r\n```\r\n\r\n\r\n### 为什么需要flex.css?\r\n```\r\n在移动端开发中，并不是所有的浏览器，webview，微信等各种版本都支持标准的flex，\r\n但是基本上都会支持-webkit-box，所以flex.css的主要作用是保证每一个属性都能支持标准flex或旧版本的-webkit-box。\r\n由于flex.css采用了autoprefixer编译，所以能够保证在浏览器不支持标准flex布局的情况下，\r\n回滚到旧版本的-webkit-box，保证移动设备中能呈现出一样的布局效果。\r\n于是，一款移动端快速布局的神器诞生了...\r\n```\r\n\r\n\r\n### 优点\r\n```\r\n简洁的api，熟悉的属性值，入门毫无压力。\r\n在html中采用属性的方式布，将布局和css进行分离，清晰的布局结构让你更容易维护，可以在不更改css的情况下更改布局。\r\n特别是在React中使用data-flex属性布局，维护起来更加的方便。\r\n```\r\n\r\n\r\n### 支持情况\r\n```\r\nflex布局分为旧版本dispaly: box;，过渡版本dispaly: flexbox;，以及现在的标准版本display: flex;\r\n\r\nAndroid\r\n  2.3 开始就支持旧版本 display:-webkit-box;\r\n  4.4 开始支持标准版本 display: flex;\r\n\r\nIOS\r\n  6.1 开始支持旧版本 display:-webkit-box;\r\n  7.1 开始支持标准版本 display: flex;\r\n\r\nPC\r\n  如果你不需要兼容ie10以下版本，也是可以使用flex.css\r\n\r\nflex.css同时能兼容新版本和旧版本，保证了浏览器不支持新版本时，回退到旧版本。\r\n```\r\n![Alt text](https://github.com/1340641314/flex.css/raw/master/shot/caniuse.png)\r\n\r\n### 使用\r\n```html\r\n<!--\r\n  将dist目录下的css文件引入到你的页面中，根据你的需要引入\r\n  flex.css 使用flex属性匹配\r\n  data-flex.css 使用data-flex属性匹配（React使用）\r\n  如果使用了webpack打包，npm安装后，并且配置了ES6编译器的话，\r\n  flex 属性匹配可以直接使用：\r\n    import 'flex.css';\r\n  data-flex 属性匹配可以直接使用(react使用)\r\n    import 'flex.css/dist/data-flex.css';\r\n -->\r\n<!-- flex属性匹配，简单的子元素居中例子： -->\r\n  <div flex=\"main:center cross:center\" style=\"width:500px; height: 500px; background: #108423\">\r\n    <div style=\"background: #fff\">看看我是不是居中的</div>\r\n  </div>\r\n\r\n<!-- data-flex属性匹配，简单的子元素居中例子： -->\r\n  <div data-flex=\"main:center cross:center\" style=\"width:500px; height: 500px; background: #f1d722\">\r\n    <div style=\"background: #fff\">看看我是不是居中的</div>\r\n  </div>\r\n```\r\n### flex属性大全\r\n```\r\ndir：主轴方向\r\n    top：从上到下\r\n    right：从右到左\r\n    bottom：从上到下\r\n    left：从左到右（默认）\r\n```\r\n```\r\nmain：主轴对齐方式\r\n    right：从右到左\r\n    left：从左到右（默认）\r\n    justify：两端对齐\r\n    center：居中对齐\r\n```\r\n```\r\ncross：交叉轴对齐方式\r\n    top：从上到下\r\n    bottom：从上到下\r\n    baseline：跟随内容高度对齐\r\n    center：居中对齐\r\n    stretch：高度并排铺满（默认）\r\n```\r\n```\r\nbox：子元素设置\r\n    mean：子元素平分空间\r\n    first：第一个子元素不要多余空间，其他子元素平分多余空间\r\n    last：最后一个子元素不要多余空间，其他子元素平分多余空间\r\n    justify：两端第一个元素不要多余空间，其他子元素平分多余空间\r\n```\r\n\r\n### flex-box属性说明\r\n```\r\n取值范围(0-10)，单独设置子元素多余空间的如何分配，设置为0，则子元素不占用多余的多余空间\r\n多余空间分配 = 当前flex-box值/子元素的flex-box值相加之和\r\n```\r\n### 其他\r\n```\r\n深圳html5开发者社群：170761660\r\nNodeJS前端分享群：133240225\r\n```\r\n\r\n### demo.html测试截图\r\n![效果截图](https://github.com/1340641314/flex.css/raw/master/shot/doc.png)\r\n\r\n***\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}